/** * Created by dell on 2017/4/10. */var path = require('path');var webpack = require('webpack');var HtmlWebpackPlugin = require('html-webpack-plugin'); //生成htmlvar ExtractTextPlugin = require("extract-text-webpack-plugin");  //css单独打包var OpenBrowserPlugin = require('open-browser-webpack-plugin');//自定义地址var PATHS = {    app: path.resolve(__dirname, 'src/app'),    build: path.resolve(__dirname, 'build'),};module.exports = {    devtool: "cheap-eval-source-map",    entry: {        app: [PATHS.app],        vendor: ['react', 'react-dom'],    },    output: {        publicPath: '',        path: PATHS.build,        filename: '[name].[hash:8].js',    },    module: {        rules: [            {                test: /\.css$/,                exclude: /^node_modules$/,                use: ExtractTextPlugin.extract({                    fallback: "style-loader",                    use: ['css-loader', 'postcss-loader'] //使用postcss-loader 要在plugin中配置LoaderOptionsPlugin                })            },            {                test: /\.scss$/,                exclude: /^node_modules$/,                use: ExtractTextPlugin.extract({                    fallback: "style-loader",                    use: ['css-loader', 'postcss-loader', 'sass-loader']                })            },            {                test: /\.less$/,                exclude: /^node_modules$/,                use: ExtractTextPlugin.extract({                    fallback: "style-loader",                    use: ['css-loader', 'postcss-loader', 'less-loader']                })            },            {                test: /\.(jsx|js)$/,                exclude: /(node_modules|bower_components)/,                loader: 'babel-loader',                query: {                    presets: ['es2015', 'react']                }            }, {                test: /\.(png|jpg)$/,                loader: 'url-loader?limit=8192&name=images/[hash:8].[name].[ext]'            },        ]    },    devServer: {        contentBase: './',  //本地服务器所加载的页面所在的目录        host: 'localhost',        port: 9000,        historyApiFallback: true,  //不跳转        /*   hot: true,         inline: true,*/        proxy: {            '/api/*': {               /* target: 'http://121.41.37.19:8081/urfresh/pms/app/v1/',*/                pathRewrite: {"^/api" : ""},                secure: false,                changeOrigin: true,                host: '',            }        }    },    plugins: [        new HtmlWebpackPlugin({            title: '测试',//生成HTML文件的title，设置template没用            filename: './index.html',//打包后html文件名            template: './src/index.html',//            inject: 'body',//生成的js文件插入到的位置，四个选项值 true(body 底部), body(body 底部), head(head 标签内), false(单纯的生成一个html 文件).            favicon: '',// html 文件生成一个 favicon            hash: true,//给生成的js文件hash 值            minify: {    //压缩HTML文件                removeComments: true,    //移除HTML中的注释                collapseWhitespace: true,    //删除空白符与换行符                conservativeCollapse: true,                minifyJS: true //js也在一行            }        }),        new ExtractTextPlugin({            filename: '[name].[hash:8].css',            allChunks: true,        }),//样式压缩        new OpenBrowserPlugin({    //自动打开浏览器            url: 'http://localhost:9000'        }),        new webpack.LoaderOptionsPlugin({            options: {                postcss: function () {                    return [                        require('autoprefixer')                    ];                }            }        }),        new webpack.optimize.CommonsChunkPlugin({            name: ['vendor'] // 指定公共 bundle 的名字。        }),        new webpack.optimize.UglifyJsPlugin(),        new webpack.HotModuleReplacementPlugin()//热加载插件    ],    resolve: {        extensions: ['.js', '.jsx', '.less', '.scss', '.css'], //后缀名自动补全    }};